import random

from settings import TOKEN, DATA_BASE_NAME, USER, PASSWORD
from telebot import types, TeleBot, custom_filters
from telebot.storage import StateMemoryStorage
from telebot.handler_backends import State, StatesGroup
import psycopg2


print('Start telegram bot...')

state_storage = StateMemoryStorage()
token_bot = TOKEN
bot = TeleBot(token_bot, state_storage=state_storage)

global conn
with psycopg2.connect(database=DATA_BASE_NAME, user=USER, password=PASSWORD) as conn:

    known_users = [] # –°–ü–ò–°–û–ö –î–õ–Ø –•–†–ê–ù–ï–ù–ò–Ø CHAT.ID –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô
    buttons = [] # –°–ü–ò–°–û–ö –ö–ù–û–ü–û–ö –î–õ–Ø –°–û–ó–î–ê–ù–ò–Ø –ö–õ–ê–í–ò–ê–¢–£–†–´


    def show_hint(*lines):
        return '\n'.join(lines)


    def show_target(data):
        return f"{data['target_word']} -> {data['translate_word']}"


    class Command:
        ADD_WORD = '–î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ ‚ûï'
        DELETE_WORD = '–£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æüîô'
        NEXT = '–î–∞–ª—å—à–µ ‚è≠'


    class MyStates(StatesGroup):
        target_word = State()
        translate_word = State()
        another_words = State()


    @bot.message_handler(commands=['start'])
    def create_cards(message):
        with conn.cursor() as cur:
            cid = message.chat.id
            if cid not in known_users:
                known_users.append(cid)
                cur.execute("""INSERT INTO users_table (user_id) VALUES(%s); 
                                                 """, (cid,));   #–ó–ê–ü–ò–°–¨ CHAT.ID –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –í –¢–ê–ë–õ–ò–¶–£ users_table

                cur.execute("""SELECT id FROM users_table
                               WHERE user_id = %s
                               """, (cid,)); #–ü–û–õ–£–ß–ï–ù–ò–ï ID –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –î–õ–Ø –î–ê–õ–¨–ù–ï–ô–®–ï–ì–û –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø –í –ë–ê–ó–ï –î–ê–ù–ù–´–•
                global id
                id = tuple(cur.fetchone())[0]

                cur.execute("""INSERT INTO user_words_table (user_id, rus_word, eng_word)
                                   VALUES (%s, '–ª–µ—Ç–æ', 'summer'),
                                          (%s, '–≤–µ—Å–Ω–∞', 'spring'),
                                          (%s, '–¥–æ–º', 'hause'),
                                          (%s, '—Å–æ–±–∞–∫–∞', 'dog'),
                                          (%s, '–≥–æ–¥', 'year'),
                                          (%s, '—Ä—É—á–∫–∞', 'pen'),
                                          (%s, '–¥–æ–∂–¥—å', 'rain'),
                                          (%s, '–∑–∏–º–∞', 'winter'),
                                          (%s, '–æ—Å–µ–Ω—å', 'autumn'),
                                          (%s, '–∫–æ—à–∫–∞', 'cat');""", (id, id, id, id, id, id, id, id, id, id)
                            ); #–ó–ê–ü–ò–°–¨ –ù–ê–ß–ê–õ–¨–ù–û–ì–û –ù–ê–ë–û–†–ê –°–õ–û–í –í –¢–ê–ë–õ–ò–¶–£ user_words_table –î–õ–Ø –ù–û–í–û–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø

                conn.commit()
                bot.send_message(cid, "Hello, let study English...")
            else:
                pass

            markup = types.ReplyKeyboardMarkup(row_width=2)

            global buttons
            buttons = []

            cur.execute("""SELECT * FROM user_words_table
                                 WHERE user_id = %s
                                 ORDER BY RANDOM()
                                 LIMIT 1
                                 """, (id,)
                        ); #–ü–û–õ–£–ß–ï–ù–ò–ï –¶–ï–õ–ï–í–û–ì–û –°–õ–û–í–ê –ò–ó –¢–ê–ë–õ–ò–¶–´ user_words_table –ù–ê –†–£–°–°–ö–û–ú –ò –ê–ù–ì–õ–ò–ô–°–ö–û–ú –Ø–ó–´–ö–ê–•

            word = tuple(cur.fetchone())
            target_word = word[3] #–°–õ–û–í–û –ù–ê –ê–ù–ì–õ–ò–ô–°–ö–û–ú
            translate = word[2] #–°–õ–û–í–û –ù–ê –†–£–°–°–ö–û–ú

            cur.execute("""INSERT INTO user_result_table (user_id, rus_word, eng_word)
                                                VALUES (%s, %s, %s)""",
                        (id, translate, target_word)
                        ); #–ó–ê–ü–ò–°–¨ –¢–ï–ö–£–©–ï–ì–û –°–õ–û–í–ê –í –¢–ê–ë–õ–ò–¶–£ –†–ï–ó–£–õ–¨–¢–ê–¢–û–í user_result_table

            target_word_btn = types.KeyboardButton(target_word)
            buttons.append(target_word_btn)

            cur.execute("""SELECT * FROM user_words_table
                                 WHERE user_id = %s
                                 ORDER BY RANDOM()
                                 LIMIT 3
                           """, (id,)
                        ); #–ü–û–õ–£–ß–ï–ù–ò–ï –¢–†–ï–• –°–õ–£–ß–ê–ô–ù–´–• –ù–ï–í–ï–†–ù–´–• –í–ê–†–ò–ê–ù–¢–ê –ù–ê –ê–ù–ì–õ–ò–ô–°–ö–û–ú –ò–ó –ë–ê–ó–´ –î–ê–ù–ù–´–•
            wrong_words = tuple(cur.fetchall())
            others = [wrong_words[0][3], wrong_words[1][3], wrong_words[2][3]]
            other_words_btns = [types.KeyboardButton(word) for word in others]
            buttons.extend(other_words_btns)
            random.shuffle(buttons)
            next_btn = types.KeyboardButton(Command.NEXT)
            add_word_btn = types.KeyboardButton(Command.ADD_WORD)
            delete_word_btn = types.KeyboardButton(Command.DELETE_WORD)
            buttons.extend([next_btn, add_word_btn, delete_word_btn])

            markup.add(*buttons)

            greeting = f"–í—ã–±–µ—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞:\nüá∑üá∫ {translate}"
            bot.send_message(message.chat.id, greeting, reply_markup=markup)
            bot.set_state(message.from_user.id, MyStates.target_word, message.chat.id)
            with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
                data['target_word'] = target_word
                data['translate_word'] = translate
                data['other_words'] = others


    # –§–£–ù–ö–¶–ò–Ø –í–´–ó–û–í–ê –§–£–ù–ö–¶–ò–ò create_cards –ü–†–ò –ù–ê–ñ–ê–¢–ò–ò –ö–ù–û–ü–ö–ò "–î–ê–õ–¨–®–ï"
    @bot.message_handler(func=lambda message: message.text == Command.NEXT)
    def next_cards(message):
        try:
            create_cards(message)
        except IndexError:
            print("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–ª–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")


    # –§–£–ù–ö–¶–ò–Ø –£–î–ê–õ–ï–ù–ò–Ø –°–õ–û–í–ê, –í–´–ó–´–í–ê–ï–ú–ê–Ø –ù–ê–ñ–ê–¢–ò–ï–ú –ö–ù–û–ü–ö–ò "–£–î–ê–õ–ò–¢–¨ –°–õ–û–í–û". –ó–ê–ü–†–ê–®–ò–í–ê–ï–¢ –ò –ü–ï–†–ï–î–ê–ï–¢ –°–õ–û–í–û –í –§–£–ù–ö–¶–ò–Æ enter_del_word
    @bot.message_handler(func=lambda message: message.text == Command.DELETE_WORD)
    def delete_word(message):
        chat_id = message.chat.id
        bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è')
        bot.register_next_step_handler(message, enter_del_word)


    #–§–£–ù–ö–¶–ò–Ø –£–î–ê–õ–ï–ù–ò–Ø –°–õ–û–í–ê, –ü–û–õ–£–ß–ê–ï–¢ –°–õ–û–í–û –û–¢ –§–£–ù–ö–¶–ò–ò delete_word –ò –£–î–ê–õ–Ø–ï–¢ –ò–ó –¢–ê–ë–õ–ò–¶–´ user_words_table –£ –ö–û–ù–ö–†–ï–¢–ù–û–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –ü–û ID
    def enter_del_word(message):
        chat_id = message.chat.id
        del_word = message.text
        bot.send_message(chat_id,  f'–°–ª–æ–≤–æ "{del_word}" —É–¥–∞–ª–µ–Ω–æ')
        with conn.cursor() as cur:
            cur.execute("""DELETE FROM user_words_table
                                WHERE user_id = %s AND rus_word = %s
                                """, (id, del_word)
                        );


    #–§–£–ù–ö–¶–ò–Ø –î–û–ë–ê–í–õ–ï–ù–ò–Ø –°–õ–û–í–ê, –í–´–ó–´–í–ê–ï–ú–ê–Ø –ù–ê–ñ–ê–¢–ò–ï–ú –ö–ù–û–ü–ö–ò "–î–û–ë–ê–í–ò–¢–¨ –°–õ–û–í–û". –ó–ê–ü–†–ê–®–ò–í–ê–ï–¢ –ò –ü–ï–†–ï–î–ê–ï–¢ –°–õ–û–í–û –ù–ê –†–£–°–°–ö–û–ú –Ø–ó–´–ö–ï –í –§–£–ù–ö–¶–ò–Æ enter_rus_word
    @bot.message_handler(func=lambda message: message.text == Command.ADD_WORD)
    def add_word(message):
        chat_id = message.chat.id
        bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ')
        bot.register_next_step_handler(message, enter_rus_word)


    #–§–£–ù–ö–¶–ò–Ø –î–û–ë–ê–í–õ–ï–ù–ò–Ø –°–õ–û–í–ê, –ü–†–ò–ù–ò–ú–ê–ï–¢ –°–õ–û–í–û –ù–ê –†–£–°–°–ö–û–ú –ò–ó –§–£–ù–ö–¶–ò–ò add_word, –î–û–ë–ê–í–õ–Ø–ï–¢ –í –¢–ê–ë–õ–ò–¶–£ user_words_table –î–õ–Ø
    #–ö–û–ù–ö–†–ï–¢–ù–û–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –ü–û ID –ò –ó–ê–ü–†–ê–®–ò–í–ê–ï–¢ –ü–ï–†–ï–í–û–î –°–õ–û–í–ê –ù–ê –ê–ù–ì–õ–ò–ô–°–ö–û–ú –Ø–ó–´–ö–ï
    def enter_rus_word(message):
        chat_id = message.chat.id
        global ru_word
        ru_word = message.text
        bot.send_message(chat_id, f'–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞ "{ru_word}" –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ')
        with conn.cursor() as cur:
            cur.execute("""INSERT INTO user_words_table (user_id, rus_word)
                                 VALUES(%s, %s);
                                 """, (id, ru_word));
        bot.register_next_step_handler(message, enter_eng_word)


    # –§–£–ù–ö–¶–ò–Ø –î–û–ë–ê–í–õ–ï–ù–ò–Ø –°–õ–û–í–ê, –ü–†–ò–ù–ò–ú–ê–ï–¢ –°–õ–û–í–û –ù–ê –ê–ù–ì–õ–ò–ô–°–ö–û–ú –ò–ó –§–£–ù–ö–¶–ò–ò enter_rus_word, –î–û–ë–ê–í–õ–Ø–ï–¢ –í –¢–ê–ë–õ–ò–¶–£ user_words_table –î–õ–Ø
    # –ö–û–ù–ö–†–ï–¢–ù–û–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –ü–û ID –ö –†–ê–ù–ï–ï –î–û–ë–ê–í–õ–ï–ù–ù–û–ú–£ –°–õ–û–í–£ –ù–ê –†–£–°–°–ö–û–ú –í –ö–ê–ß–ï–°–¢–í–ï –ü–ï–†–ï–í–û–î–ê
    def enter_eng_word(message):
        chat_id = message.chat.id
        en_word = message.text
        bot.send_message(chat_id, f'–°–ª–æ–≤–æ "{ru_word}" - "{en_word}" –¥–æ–±–∞–≤–ª–µ–Ω–æ')
        with conn.cursor() as cur:
            cur.execute("""UPDATE user_words_table
                                 SET eng_word = %s
                                 WHERE user_id = %s AND rus_word = %s
                                 """, (en_word, id, ru_word));


    # –§–£–ù–ö–¶–ò–Ø –û–ë–†–ê–ë–û–¢–ö–ò –í–ê–†–ò–ê–ù–¢–ê –û–¢–í–ï–¢–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
    @bot.message_handler(func=lambda message: True, content_types=['text'])
    def message_reply(message):
        text = message.text
        markup = types.ReplyKeyboardMarkup(row_width=2)
        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            target_word = data['target_word']
            if text == target_word:
                hint = show_target(data)
                hint_text = ["–û—Ç–ª–∏—á–Ω–æ!‚ù§", hint]
                next_btn = types.KeyboardButton(Command.NEXT)
                add_word_btn = types.KeyboardButton(Command.ADD_WORD)
                delete_word_btn = types.KeyboardButton(Command.DELETE_WORD)
                hint = show_hint(*hint_text)
            else:
                for btn in buttons:
                    if btn.text == text:
                        btn.text = text + '‚ùå'
                        break
                hint = show_hint("–î–æ–ø—É—â–µ–Ω–∞ –æ—à–∏–±–∫–∞!",
                                 f"–ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ –≤—Å–ø–æ–º–Ω–∏—Ç—å —Å–ª–æ–≤–æ üá∑üá∫{data['translate_word']}")
        markup.add(*buttons)
        bot.send_message(message.chat.id, hint, reply_markup=markup)
        with conn.cursor() as cur:
            cur.execute("""UPDATE user_result_table
                                 SET user_answer = %s
                                 WHERE user_id = %s AND eng_word = %s
                                 """, (text, id, target_word)
                        ); # –ó–ê–ü–ò–°–¨ –û–í–ï–¢–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –í –¢–ê–ë–õ–ò–¶–£ user_result_table –î–õ–Ø –¢–ï–ö–£–©–ï–ì–û –°–õ–û–í–ê

    bot.add_custom_filter(custom_filters.StateFilter(bot))

    bot.infinity_polling(skip_pending=True)


















